name: salles_tools
description: Hasjrat Salles Tools Mobile Application

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.6+9

environment:
  sdk: ">=2.1.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^0.1.2

  # Intl Package
  intl: ^0.16.0

  # A powerful Http client for Dart, which supports Interceptors, FormData, Request Cancellation,
  # File Downloading, Timeout etc.
  dio: ^3.0.9

  # Package designed to select an item from a list, with the option to filter
  # and even search the items online.
  select_dialog: ^1.0.7

  # Simple direct Service Locator that allows to decouple the interface from a concrete implementation
  # and to access the concrete implementation from everywhere in your App
  get_it: ^3.0.3

  # A Flutter implementation of slidable list item with directional slide actions that
  # can be dismissed.
  flutter_slidable: ^0.5.4

  # A flutter package to easily added dotted borders around widgets.
  dotted_border: ^1.0.4

  # The launch method takes a string argument containing a URL.
  # This URL can be formatted using a number of different URL schemes.
  url_launcher: ^5.4.1

  # This Flutter plugin provides an API for querying information about an application package.
  package_info: ^0.4.0+13

  # Generate App Icon
  flutter_launcher_icons: ^0.7.4

  # Flutter plugin for reading and writing
  shared_preferences: ^0.5.4+6

  # The Font Awesome Icon pack
  font_awesome_flutter: ^8.5.0

  # A Flutter geolocation plugin which provides easy access to the platform specific location
  geolocator: ^5.3.0

  # This plugin for Flutter handles getting location on Android and iOS.
  location: ^3.0.2

  # Customizable Icons for Flutter
  flutter_icons: ^1.0.0+1

  # A carousel slider widget, support infinite scroll and custom child widget
  carousel_slider: ^1.4.1

  # Syncfusion Flutter Charts is a data visualization library written natively in Dart
  syncfusion_flutter_charts: ^18.1.52

  # Lets you place headers on scrollable content that will stick to the top of the
  # container whilst the content is scrolled.
  sticky_headers: ^0.1.8+1

  # Circular and Linear percent indicators
  percent_indicator: ^2.1.1+1

  # A Flutter plugin for iOS and Android for picking images from the image library
  image_picker: ^0.6.3+1

  # A Flutter plugin for Android and iOS supports cropping images.
  image_cropper: ^1.2.1

  # Masked text input for flutter.
  flutter_masked_text: ^0.8.0

  # Flutter widgets that make it easy to implement the BLoC design pattern.
  flutter_bloc: ^3.0.0

  # A TypeAhead (autocomplete) widget for Flutter
  flutter_typeahead: ^1.7.0

  # Flutter date range pickers use a dialog window to select a range of date on mobile.
  date_range_picker: ^1.0.6

  # For Simple Serialize
  equatable: ^1.0.1

  # Logging Data
  simple_logger: ^1.5.1+1

  # SQLite plugin for Flutter.
  sqflite: ^1.2.1

  # A Flutter plugin for finding commonly used locations on the filesystem.
  path_provider: ^1.6.1

  # A plug-in that can call native APP to open files with string result in flutter,support iOS(UTI) and android(intent)
  open_file: ^3.0.1

  # A Flutter plugin to use the ML Kit Vision for Firebase API.
  firebase_ml_vision: ^0.9.3+5

  # RxDart adds additional capabilities to Dart Streams and StreamControllers.
  rxdart: ^0.23.1

  # A package provides an easy way to add shimmer effect in Flutter project
  shimmer: ^1.0.1

  # A Flutter plugin for accessing the Android AlarmManager service
  android_alarm_manager: ^0.4.5+4

  # RFlutter Alert is super customizable and easy-to-use alert/popup dialogs for Flutter.
  rflutter_alert: ^1.0.3

  # Pdf creation library
  pdf: ^1.6.0

  # Plugin to render PDF pages as images on
#  native_pdf_renderer: ^2.3.2

  # A library that exposes device specific speech recognition capability.
  speech_to_text: ^2.1.0

  # A cross platform plugin for displaying local notifications.
  flutter_local_notifications: ^1.2.0+3

  # A Flutter plugin to use the Firebase Core API,
  # which enables connecting to multiple Firebase apps.
  firebase_core: ^0.4.3+1

  # The Google Sign-in plugin is required to use the firebase_auth plugin for Google authentication.
  firebase_auth: ^0.15.3

dev_dependencies:
  flutter_test:
    sdk: flutter

flutter_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/icons/app-icon.jpeg"


# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/icons/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Open-Sans
      fonts:
        - asset: assets/fonts/OpenSans-Bold.ttf
        - asset: assets/fonts/OpenSans-Light.ttf
        - asset: assets/fonts/OpenSans-Regular.ttf
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
